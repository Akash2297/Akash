#include<bits/stdc++.h>
 
#define ln     (int)1e6
#define pi     acos(-1.0)
#define pb     push_back
#define pf     push_front
#define mp     make_pair
#define F      first
#define S      second
#define INF    1000000000000000000
#define LES    -1000000000000000000
#define ll     long long
#define str    string
 
#define lb     printf("\n");

#define sc1(a)         scanf("%lld",&a)
#define sc2(a,b)       scanf("%lld %lld",&a,&b)
#define sc3(a,b,c)     scanf("%lld %lld %lld",&a,&b,&c)
#define sc4(a,b,c,d)   scanf("%lld %lld %lld %lld",&a,&b,&c,&d)
 
using namespace std;

vector<ll>primes;
ll n=10000010;
bool prime[10000010];
ll len;

void SieveOfEratosthenes()
{
    memset(prime, true, sizeof(prime));
    for (ll p=2; p*p<=n; p++)
    {
        if (prime[p] == true)
        {
            for (ll i=p*p; i<=n; i += p){
                prime[i] = false;
            }
        }
    }
    for (int p=2; p<=n; p++){
        if (prime[p]){
            primes.push_back(p);
        }
    }
        
}
int main() {
    SieveOfEratosthenes();
    len=primes.size();
    
    ll num;
    while(scanf("%lld",&num)!=EOF){
        
        if(num<8){
            cout<<"Impossible.\n";
        }
        else{
            ll a,b,c,d,temp1;
            a=b=c=d=temp1=0;
            bool con=false;
            
            if(num%2==0){
                a=2;
                b=2;
            }
            else{
                a=2;
                b=3;
            }
            temp1=num-(a+b);
            for(ll i=0;i<len;i++){
                
                if(primes[i]>num){
                    break;
                }
                
                ll temp2=temp1-primes[i];
                if(prime[temp2]==true){
                    con=true;
                    c=primes[i];
                    d=temp2;
                    
                    break;
                }
            }
            
            if(con==false){
                cout<<"Impossible.\n";
            }
            else{
                printf("%lld %lld %lld %lld\n",a,b,c,d);
            }

        }
    }
    return 0;
}


